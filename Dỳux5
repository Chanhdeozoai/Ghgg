-- Global Variables
local AutoFarm = {}
AutoFarm.Enabled = false
AutoFarm.CurrentIsland = 1
AutoFarm.SafeZoneRadius = 20
AutoFarm.AttackRange = 5
AutoFarm.UseFruitSkills = false -- Still using Melee
AutoFarm.DebugMode = true
AutoFarm.GatherRange = 15

-- Island Data (Simplified - You'll need to adjust this!)
-- I'm keeping the structure, but the coordinates might be wrong.
local IslandData = {
  {1, "Milo", {{"Bandit", 1, {10, 15, 20}}, {"Bandit Leader", 5, {15, 16, 25}}}},
  {2, "Sword Dealer of the West", {{"Monkey", 5, {-25, 17, 30}}, {"Gorilla", 10, {-30, 18, 35}}, {"Gorilla King", 15, {-35, 20, 40}}}},
  {3, "Monkey King", {{"Pirate", 15, {50, 15, 15}}, {"Brute", 20, {60, 15, 18}}}},
  {4, "Buggy the Clown", {{"Snow Bandit", 30, {-70, 22, 60}}, {"Snowman", 40, {-80, 25, 70}}, {"Yeti", 50, {-90, 30, 80}}}},
  {5, "Rich Man", {{"Marine Lieutenant", 60, {100, 15, 5}}, {"Marine Captain", 75, {110, 15, 5}}}},
  {6, "Roblox Admin", {{"Desert Bandit", 90, {-115, 15, 5}}, {"Desert Officer", 100, {-120, 16, 8}}}},
  {7, "Experienced Captain", {{"Prisoner", 120, {125, 15, 5}}, {"Dangerous Prisoner", 130, {135, 17, 7}}, {"Chief Warden", 150, {150, 20, 10}}, {"Warden", 140, {145, 17, 12}}}},
  {8, "Seti", {{"Magma Ninja", 175, {-130, 15, 5}}, {"Lava Pirate", 200, {-135, 19, 9}}}},
  {9, "Water KungFu Teacher", {{"Fishman", 225, {150, 15, 5}}, {"Fishman Warrior", 250, {155, 19, 12}}, {"Fishman Captain", 275, {160, 17, 10}}, {"Fishman Lord", 300, {165, 19, 15}}}},
  {10, "Master of Auras", {{"Sky Bandit", 300, {150, 90, 10}}, {"Dark Master", 325, {155, 100, 15}}, {"Shanda", 350, {160, 120, 20}}}},
  {11, "Usoap", {{"God's Guard", 375, {170, 90, 15}}, {"Warrior of the Sky", 400, {175, 100, 20}}}},
  {12, "Thunder God", {{"Royal Soldier", 425, {-185, 90, 20}}, {"Royal Squad", 450, {-190, 95, 25}}, {"Thunder God", 475, {-195, 100, 30}}}},
  {13, "Ice Admiral", {{"Snow Trooper", 500, {160, 90, 20}}, {"Winter Warrior", 525, {170, 95, 25}}, {"Ice Admiral", 550, {180, 100, 30}}}},
  {14, "Swan", {{"Factory Staff", 575, {-165, 15, 5}}, {"Cyborg", 600, {-170, 18, 8}}, {"Robot Mega", 625, {-175, 15, 10}}, {"Swan", 700, {-180, 15, 10}}}},
	{15, "Fajita", {{"Military Soldier", 650, {180, 5, 5}}, {"Military Commando", 675, {185, 10, 10}}}},
};

-- Player and Character Setup (More Robust)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character, Humanoid, RootPart

local function WaitForCharacter()
    Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    Humanoid = Character:WaitForChild("Humanoid")
    RootPart = Character:WaitForChild("HumanoidRootPart")
end
WaitForCharacter() -- Initial wait


-- Function to get player's level, Beli, and equipped Melee style
local function GetPlayerInfo()
    local level = LocalPlayer.leaderstats.Level.Value
    local beli = LocalPlayer.leaderstats.Beli.Value
    local meleeStyle = "Combat"
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Combat Style") then
        meleeStyle = LocalPlayer.Character["Combat Style"].Name
    end
    return level, beli, meleeStyle
end

-- Function to determine the best island to farm (from previous version)
local function GetBestIsland(level)
    local bestIsland = 1
    for i, island in ipairs(IslandData) do
        local mobs = island[3]
        local minLevel = math.huge
        for _, mobInfo in ipairs(mobs) do
            local mobLevel = mobInfo[2]
            if mobLevel < minLevel then
                minLevel = mobLevel
            end
        end
        if level >= minLevel then
            bestIsland = i
        else
            break
        end
    end
    return bestIsland
end

-- Function to check if a quest is active (Still a placeholder!)
local function HasQuest()
    for _, guiObject in pairs(LocalPlayer.PlayerGui:GetChildren()) do
        if guiObject:IsA("ScreenGui") and guiObject.Enabled then
            return true
        end
    end
    return false
end

-- Function to accept a quest (Simplified from the linked script)
local function AcceptQuest(npcName)
    if AutoFarm.DebugMode then print("Attempting to accept quest from:", npcName) end
    local npc = workspace:FindFirstChild(npcName)
    if not npc then
        if AutoFarm.DebugMode then print("ERROR: NPC not found:", npcName) end
        return
    end

    if RootPart then
        RootPart.CFrame = npc.CFrame * CFrame.new(0, 2, 5) -- Approach NPC
    else
        if AutoFarm.DebugMode then print("ERROR: HumanoidRootPart not found!") end
        return
    end
    wait(0.5)

	local vInput = game:GetService("VirtualInputManager")
    local interactKey = "E" -- Interaction Key
     local attempts = 3
     for i = 1, attempts do
         vInput:SendKeyEvent(true, interactKey, false, game)
         wait(0.1)
         vInput:SendKeyEvent(false, interactKey, false, game)
         wait(1)  -- Give time for quest to appear
          if HasQuest() then  -- Check *after* interaction
             if AutoFarm.DebugMode then print("Quest accepted (hopefully)!") end
             return  -- Success!
          end
     end
      if AutoFarm.DebugMode then print("Failed to accept quest after multiple attempts.") end
end

-- Function to find nearby targets (from previous version)
local function FindTargets(mobData, gatherRange)
    local targets = {}
    for _, mobInfo in ipairs(mobData) do
        local mobName, _, mobPosition = unpack(mobInfo)
        local mobs = workspace:GetChildren()
        for _, mob in ipairs(mobs) do
            if mob.Name == mobName and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
                local distance = (RootPart.Position - mob.HumanoidRootPart.Position).Magnitude
                if distance <= gatherRange then
                    table.insert(targets, mob)
                end
            end
        end
    end
    return targets
end

-- Function to move to a position (Simplified)
local function MoveTo(destination)
    if not RootPart then return end
    Humanoid:MoveTo(destination)
    Humanoid.MoveToFinished:Wait(5) -- Simple wait
end
-- Function to attack from above (Adapted from your linked script and previous versions)
local function AttackFromAbove(targets, heightOffset)
    if #targets == 0 then return end

    local sumX, sumY, sumZ = 0, 0, 0
    for _, target in ipairs(targets) do
        if target and target:FindFirstChild("HumanoidRootPart") then
            sumX = sumX + target.HumanoidRootPart.Position.X
            sumY = sumY + target.HumanoidRootPart.Position.Y
            sumZ = sumZ + target.HumanoidRootPart.Position.Z
        end
    end
    local avgX = sumX / #targets
    local avgY = sumY / #targets
    local avgZ = sumZ / #targets
    local centerPosition = Vector3.new(avgX, avgY, avgZ)

    if RootPart then
      RootPart.CFrame = CFrame.new(centerPosition.X, centerPosition.Y + heightOffset, centerPosition.Z)
    else
      if AutoFarm.DebugMode then print("ERROR: RootPart missing in AttackFromAbove") end
      return
    end
    wait(0.5)

    local attackKey = "1"
    local vInput = game:GetService("VirtualInputManager")
    local attackCooldown = 0.3
    local lastAttackTime = 0

    while #targets > 0 do
        local closestTarget = nil
        local closestDistance = math.huge

        for i = #targets, 1, -1 do
            local target = targets[i]
            if not target or not target.Parent or not target:FindFirstChild("Humanoid") or target.Humanoid.Health <= 0 then
                table.remove(targets, i)
            else
                local distance = (RootPart.Position - target.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestTarget = target
                end
            end
        end

        if closestTarget then
            local currentTime = tick()
            if currentTime - lastAttackTime >= attackCooldown then
                vInput:SendKeyEvent(true, attackKey, false, game)
                wait(0.1)
                vInput:SendKeyEvent(false, attackKey, false, game)
                lastAttackTime = currentTime
            end

            if RootPart then  -- Check RootPart again
                local distFromCenter = (RootPart.Position - Vector3.new(centerPosition.X, centerPosition.Y + heightOffset, centerPosition.Z)).Magnitude
                if distFromCenter > 5 then
                    RootPart.CFrame = CFrame.new(centerPosition.X, centerPosition.Y + heightOffset, centerPosition.Z)
                end
            else
                if AutoFarm.DebugMode then print("ERROR: Rootpart missing during attack") end
                return -- Exit if character is gone
            end
        else
            if AutoFarm.DebugMode then print("No valid targets remaining.") end
            break
        end

        wait(0.1)
    end
end

-- Main farming loop (Adapted)
local function FarmLoop()
    while AutoFarm.Enabled do
        WaitForCharacter()  -- Ensure character is loaded

        local level, beli, meleeStyle = GetPlayerInfo()
        if AutoFarm.DebugMode then
            print("Current Level:", level)
            print("Current Beli:", beli)
            print("Equipped Melee:", meleeStyle)
        end

        local bestIslandIndex = GetBestIsland(level)
        local bestIslandData = IslandData[bestIslandIndex]

        if not bestIslandData then
            if AutoFarm.DebugMode then print("ERROR: No suitable island found.") end
            AutoFarm.Enabled = false
            break
        end
        if AutoFarm.DebugMode then print("Farming at island:", bestIslandData[2]) end

        AcceptQuest(bestIslandData[2])
        wait(1)

        local targets = FindTargets(bestIslandData[3], AutoFarm.GatherRange)
        AttackFromAbove(targets, 10)

        wait(1)
    end
end

-- GUI Setup (Basic Toggle Button -  You'll likely want a better GUI)
local FarmGui = Instance.new("ScreenGui")
FarmGui.Name = "AutoFarmGui"
FarmGui.Parent = LocalPlayer.PlayerGui
FarmGui.ResetOnSpawn = false

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Parent = FarmGui
ToggleButton.Size = UDim2.new(0, 100, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -50, 0.9, -25)
ToggleButton.Text = "Start Farm"
ToggleButton.BackgroundColor3 = Color3.new(0, 1, 0)
ToggleButton.TextColor3 = Color3.new(1, 1, 1)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 18

local function ToggleFarm()
    AutoFarm.Enabled = not AutoFarm.Enabled
    if AutoFarm.Enabled then
        ToggleButton.Text = "Stop Farm"
        ToggleButton.BackgroundColor3 = Color3.new(1, 0, 0)
        FarmLoop()
    else
        ToggleButton.Text = "Start Farm"
        ToggleButton.BackgroundColor3 = Color3.new(0, 1, 0)
        if Character and Character:FindFirstChild("Humanoid") then
            Character.Humanoid.WalkToPoint = Character.HumanoidRootPart.Position
            Character.Humanoid:ChangeState(Enum.HumanoidStateType.Running, false)
            Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping, false)
        end
        if AutoFarm.DebugMode then print("Farming stopped.") end
    end
end

ToggleButton.MouseButton1Click:Connect(ToggleFarm)
